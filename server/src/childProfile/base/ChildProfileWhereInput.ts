/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumChildProfileFloatingSupport } from "./EnumChildProfileFloatingSupport";
import { EnumChildProfileGender } from "./EnumChildProfileGender";
import { StringFilter } from "../../util/StringFilter";
import { LocalAuthorityListRelationFilter } from "../../localAuthority/base/LocalAuthorityListRelationFilter";
import { EnumChildProfileSemiIndependentLiving } from "./EnumChildProfileSemiIndependentLiving";
import { UnitListRelationFilter } from "../../unit/base/UnitListRelationFilter";
@InputType()
class ChildProfileWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  allergies?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  clientName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumChildProfileFloatingSupport,
  })
  @IsEnum(EnumChildProfileFloatingSupport)
  @IsOptional()
  @Field(() => EnumChildProfileFloatingSupport, {
    nullable: true,
  })
  floatingSupport?: "Yes" | "No";

  @ApiProperty({
    required: false,
    enum: EnumChildProfileGender,
  })
  @IsEnum(EnumChildProfileGender)
  @IsOptional()
  @Field(() => EnumChildProfileGender, {
    nullable: true,
  })
  gender?: "Male" | "Female";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LocalAuthorityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LocalAuthorityListRelationFilter)
  @IsOptional()
  @Field(() => LocalAuthorityListRelationFilter, {
    nullable: true,
  })
  localAuthorities?: LocalAuthorityListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nameOfKeyWorker?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumChildProfileSemiIndependentLiving,
  })
  @IsEnum(EnumChildProfileSemiIndependentLiving)
  @IsOptional()
  @Field(() => EnumChildProfileSemiIndependentLiving, {
    nullable: true,
  })
  semiIndependentLiving?: "Yes" | "No";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  startDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UnitListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UnitListRelationFilter)
  @IsOptional()
  @Field(() => UnitListRelationFilter, {
    nullable: true,
  })
  units?: UnitListRelationFilter;
}
export { ChildProfileWhereInput };
